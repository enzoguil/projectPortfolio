---
- hosts: web
  become: yes
  tasks:
    - name: Installer Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Installer Docker Compose
      apt:
        name: docker-compose
        state: present

    - name: Copier l'application sur le VPS (en ignorant .env)
      synchronize:
        src: ../portfolios/
        dest: /var/www/html/
        recursive: yes
        delete: yes
        rsync_opts:
          - "--exclude=.env"

    - name: Copier le docker-compose.yml
      copy:
        dest: /home/{{ ansible_user }}/docker-compose.yml
        content: |
          services:
            app:
              image: laravelsail/php82-composer
              container_name: laravel_app
              working_dir: /var/www/html
              volumes:
                - /var/www/html:/var/www/html
              command: bash -c "composer install && php-fpm"
            nginx:
              image: nginx:alpine
              container_name: nginx
              ports:
                - "80:80"
              volumes:
                - /var/www/html:/var/www/html
                - ./nginx.conf:/etc/nginx/conf.d/default.conf
              depends_on:
                - app

    - name: Copier la conf Nginx pour Docker
      copy:
        dest: /home/{{ ansible_user }}/nginx.conf
        content: |
          server {
              listen 80;
              server_name _;
              root /var/www/html/public;
              index index.php index.html;
              location / {
                  try_files $uri $uri/ /index.php?$query_string;
              }
              location ~ \.php$ {
                  fastcgi_pass app:9000;
                  fastcgi_index index.php;
                  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                  include fastcgi_params;
              }
          }

    - name: Ajouter l'utilisateur au groupe docker
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Stop Apache if running
      service:
        name: apache2
        state: stopped
      ignore_errors: yes

    - name: Disable Apache at boot
      service:
        name: apache2
        enabled: no
      ignore_errors: yes

    - name: Stop Nginx if running
      service:
        name: nginx
        state: stopped
      ignore_errors: yes

    - name: Disable Nginx at boot
      service:
        name: nginx
        enabled: no
      ignore_errors: yes

    - name: Lancer la stack Docker
      shell: docker compose -f /home/{{ ansible_user }}/docker-compose.yml up -d

    - name: Installer les d√©pendances Laravel dans le conteneur
      shell: docker exec laravel_app composer install